// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id               String                     @id @default(cuid()) @db.Char(25)
  name             String                     @db.VarChar(30)
  challengeMembers ChallengeMember[]
  activities       ChallengeProcessActivity[]
  messages         ChallengeProcessMessage[]
  supabaseId       String                     @unique @db.Char(36)
  createdAt        DateTime                   @default(now()) @map("created_at") @db.Timestamp
  updatedAt        DateTime                   @updatedAt @map("updated_at") @db.Timestamp

  @@map("users")
}

enum ChallengeStatus {
  draft
  active
  completed

  @@map("challenge_statuses")
}

model Challenge {
  id          String          @id @default(cuid()) @db.Char(25)
  title       String          @db.VarChar(100)
  description String?         @db.Text
  // date やめて string にするか検討 単純に timezone とか不要、
  targetDate  DateTime        @map("target_date") @db.Date
  status      ChallengeStatus @default(active)

  members             ChallengeMember[]
  createdAt           DateTime              @default(now()) @map("created_at") @db.Timestamp
  updatedAt           DateTime              @updatedAt @map("updated_at") @db.Timestamp
  challengeProcess    ChallengeProcess?
  challengeInviteCode ChallengeInviteCode[]

  @@map("challenges")
}

model ChallengeProcess {
  challengeId String                     @id @map("challenge_id") @db.Char(25)
  challenge   Challenge                  @relation(fields: [challengeId], references: [id])
  messages    ChallengeProcessMessage[]
  createdAt   DateTime                   @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime                   @updatedAt @map("updated_at") @db.Timestamp
  activities  ChallengeProcessActivity[]

  @@unique([challengeId])
  @@map("challenge_processes")
}

enum ChallengeMemberRole {
  admin
  member

  @@map("roles")
}

model ChallengeMember {
  userId      String                     @map("user_id") @db.Char(25)
  challengeId String                     @map("challenge_id") @db.Char(25)
  role        ChallengeMemberRole        @default(member)
  user        User                       @relation(fields: [userId], references: [id])
  challenge   Challenge                  @relation(fields: [challengeId], references: [id])
  createdAt   DateTime                   @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime                   @updatedAt @map("updated_at") @db.Timestamp
  activities  ChallengeProcessActivity[]
  messages    ChallengeProcessMessage[]

  @@id([userId, challengeId])
  @@map("challenge_members")
}

model ChallengeInviteCode {
  code        String    @id @db.Char(8)
  challengeId String    @map("challenge_id") @db.Char(25)
  createdAt   DateTime  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime  @updatedAt @map("updated_at") @db.Timestamp
  challenge   Challenge @relation(fields: [challengeId], references: [id])

  @@map("challenge_invite_codes")
}

model ChallengeProcessActivity {
  id          String                    @id @default(cuid()) @db.Char(25)
  userId      String                    @map("user_id") @db.Char(25)
  challengeId String                    @map("challenge_id") @db.Char(25)
  distance    Int                       @db.Integer
  duration    Int                       @db.Integer
  date        DateTime                  @db.Timestamp
  note        String?                   @db.Text
  imageUrl    String?                   @map("image_url") @db.VarChar(255)
  member      ChallengeMember           @relation(fields: [userId, challengeId], references: [userId, challengeId])
  process     ChallengeProcess          @relation(fields: [challengeId], references: [challengeId])
  messages    ChallengeProcessMessage[]
  createdAt   DateTime                  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime                  @updatedAt @map("updated_at") @db.Timestamp
  user        User                      @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([challengeId])
  @@map("activities")
}

model ChallengeProcessMessage {
  id          String                    @id @default(cuid()) @db.Char(25)
  content     String                    @db.Text
  userId      String                    @map("user_id") @db.Char(25)
  challengeId String                    @map("challenge_id") @db.Char(25)
  activityId  String?                   @map("activity_id") @db.Char(25)
  member      ChallengeMember           @relation(fields: [userId, challengeId], references: [userId, challengeId])
  user        User                      @relation(fields: [userId], references: [id])
  process     ChallengeProcess          @relation(fields: [challengeId], references: [challengeId])
  activity    ChallengeProcessActivity? @relation(fields: [activityId], references: [id])
  createdAt   DateTime                  @default(now()) @map("created_at") @db.Timestamp
  updatedAt   DateTime                  @updatedAt @map("updated_at") @db.Timestamp

  @@index([userId])
  @@index([challengeId])
  @@index([activityId])
  @@map("challenge_process_messages")
}
