/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/signup': {
    parameters: {};
    /** Create a new user */
    post: operations['post-signup'];
  };
  '/me': {
    parameters: {};
    /** Get current user */
    get: operations['get-me'];
    /** Update current user */
    patch: operations['patch-me'];
  };
  '/challenges': {
    parameters: {};
    /** Get all challenges */
    get: operations['get-challenges'];
    /** Create a new challenge */
    post: operations['post-challenges'];
  };
  '/challenge_members': {
    parameters: {};
    /** Join a challenge */
    post: operations['post-challenge-members'];
  };
  '/challenge_members/invite_code': {
    parameters: {};
    /** Get invite code for a challenge */
    get: operations['get-challenge-members-invite-code'];
    /** Create an invite code for a challenge */
    post: operations['post-challenge-members-invite-code'];
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    User: {
      id: string;
      name: string;
    };
    Challenge: {
      id: string;
      title?: string;
      description: string | null;
      /** Format: date */
      targetDate: string;
      /** @enum {string} */
      status: 'draft' | 'active' | 'completed';
    };
    Success: {
      success: boolean;
    };
  };
}
export type $defs = Record<string, never>;
export interface operations {
  'post-signup': {
    parameters: {};
    responses: {
      /** @description User created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Success'];
        };
      };
    };
  };
  'get-me': {
    parameters: {};
    responses: {
      /** @description User found */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['User'];
        };
      };
    };
  };
  'patch-me': {
    parameters: {};
    requestBody: {
      content: {
        'application/json': {
          name: string;
        };
      };
    };
    responses: {
      /** @description User updated */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Success'];
        };
      };
    };
  };
  'get-challenges': {
    parameters: {};
    responses: {
      /** @description Challenges found */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Challenge'][];
        };
      };
    };
  };
  'post-challenges': {
    parameters: {};
    requestBody: {
      content: {
        'application/json': {
          title: string;
          description: string | null;
          /** Format: date */
          targetDate: string;
          /** @enum {string} */
          status: 'draft' | 'active';
        };
      };
    };
    responses: {
      /** @description Challenge created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Success'];
        };
      };
    };
  };
  'post-challenge-members': {
    parameters: {};
    requestBody: {
      content: {
        'application/json': {
          inviteCode: string;
        };
      };
    };
    responses: {
      /** @description Challenge joined */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': components['schemas']['Success'];
        };
      };
    };
  };
  'get-challenge-members-invite-code': {
    parameters: {
      query: {
        /** @description Challenge ID to get invite code for */
        challengeId: string;
      };
    };
    responses: {
      /** @description Invite code retrieved */
      200: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            code: string;
            isValid: boolean;
          };
        };
      };
    };
  };
  'post-challenge-members-invite-code': {
    parameters: {};
    requestBody: {
      content: {
        'application/json': {
          challengeId: string;
        };
      };
    };
    responses: {
      /** @description Invite code created */
      201: {
        headers: {
          [name: string]: unknown;
        };
        content: {
          'application/json': {
            code: string;
          };
        };
      };
    };
  };
}
