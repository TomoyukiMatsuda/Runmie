/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/signup': {
    parameters: {};
    /** Create a new user */
    post: {
      parameters: {};
      responses: {
        /** @description User created */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Success'];
          };
        };
      };
    };
  };
  '/me': {
    parameters: {};
    /** Get current user */
    get: {
      parameters: {};
      responses: {
        /** @description User found */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['User'];
          };
        };
      };
    };
    /** Update current user */
    patch: {
      parameters: {};
      requestBody: {
        content: {
          'application/json': {
            name: string;
          };
        };
      };
      responses: {
        /** @description User updated */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Success'];
          };
        };
      };
    };
  };
  '/challenges': {
    parameters: {};
    /** Get all challenges */
    get: {
      parameters: {};
      responses: {
        /** @description Challenges found */
        200: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Challenge'][];
          };
        };
      };
    };
    /** Create a new challenge */
    post: {
      parameters: {};
      requestBody: {
        content: {
          'application/json': {
            title: string;
            description: string;
            /** Format: date */
            targetDate: string;
            /** @enum {string} */
            status: 'draft' | 'active';
          };
        };
      };
      responses: {
        /** @description Challenge created */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Success'];
          };
        };
      };
    };
  };
  '/challenge_members': {
    parameters: {};
    /** Join a challenge */
    post: {
      parameters: {};
      requestBody: {
        content: {
          'application/json': {
            challengeId: string;
          };
        };
      };
      responses: {
        /** @description Challenge joined */
        201: {
          headers: {
            [name: string]: unknown;
          };
          content: {
            'application/json': components['schemas']['Success'];
          };
        };
      };
    };
  };
}
export type webhooks = Record<string, never>;
export interface components {
  schemas: {
    User: {
      id: string;
      name: string;
    };
    Challenge: {
      id: string;
      name: string;
      description: string;
      /** Format: date */
      targetDate: string;
      /** @enum {string} */
      status: 'draft' | 'active' | 'completed';
    };
    Success: {
      success: boolean;
    };
  };
}
export type $defs = Record<string, never>;
export type operations = Record<string, never>;
